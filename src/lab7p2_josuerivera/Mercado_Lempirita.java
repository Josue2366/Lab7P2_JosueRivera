/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lab7p2_josuerivera;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author josue
 */
public class Mercado_Lempirita extends javax.swing.JFrame {

    /**
     * Creates new form Mercado_Lempirita
     */
    public Mercado_Lempirita() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        Jt_Comandos = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        Jtable_producto = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();

        jMenu3.setText("jMenu3");

        jMenuItem1.setText("jMenuItem1");
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setText("jMenuItem2");
        jPopupMenu1.add(jMenuItem2);

        jMenuItem3.setText("jMenuItem3");
        jPopupMenu2.add(jMenuItem3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToggleButton1.setText("Enter");
        jToggleButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton1MouseClicked(evt);
            }
        });

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("CSVs");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(jTree1);

        Jtable_producto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Category", "Price", "Aisle", "Bin"
            }
        ));
        jScrollPane2.setViewportView(Jtable_producto);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 14, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Jt_Comandos)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Jt_Comandos)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        jMenuItem4.setText("New File");
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Import File");
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Window");

        jMenu5.setText("Clear");

        jMenuItem7.setText("Clear Command Line");
        jMenu5.add(jMenuItem7);

        jMenuItem8.setText("Clear Table");
        jMenu5.add(jMenuItem8);

        jMenu2.add(jMenu5);

        jMenuItem6.setText("Refresh Tree");
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("Help");

        jMenuItem9.setText("Product Structure");
        jMenu4.add(jMenuItem9);

        jMenuItem10.setText("Commands");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem10);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jToggleButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton1MouseClicked
        // TODO add your handling code here:
        String com = "";
        if (Jt_Comandos.getText().contains("./load ")){
            load();
        }
        else if (Jt_Comandos.getText().contains("./create ")){
            try {
                create();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        else if (Jt_Comandos.getText().contains("./clear")){
            
        }
        else if (Jt_Comandos.getText().contains("./refresh")){
            
        }
        else{
            JOptionPane.showMessageDialog(this, "Commando Incorrecto");
        }
    }//GEN-LAST:event_jToggleButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mercado_Lempirita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mercado_Lempirita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mercado_Lempirita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mercado_Lempirita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mercado_Lempirita().setVisible(true);
            }
        });
    }
    public void load(){
        String com = "";
        Scanner sc = new Scanner(Jt_Comandos.getText());
            sc.useDelimiter(" ");
            while (sc.hasNext()){
                sc.next();
                com = sc.next();
            }
            Admin_Product p = new Admin_Product(com);
            if (p.getArchivo().exists()){
                p.cargarArchivo();
            DefaultTableModel modelo =(DefaultTableModel) Jtable_producto.getModel();
            modelo.setRowCount(0);
                for (int i = 0; i < p.getLista().size(); i++) {
                    Object [] products = {
                        p.getLista().get(i).getId(),
                        p.getLista().get(i).getName(),
                        p.getLista().get(i).getCategory(),
                        p.getLista().get(i).getPrice(),
                        p.getLista().get(i).getAisle(),
                        p.getLista().get(i).getBin()};
                    modelo.addRow(products);
                }
                
            }
            else{
               JOptionPane.showMessageDialog(this, "el Archivo no existe");
            }
            
    }
    public void create() throws IOException{
        int cont = 0;
        DefaultTreeModel modelo = 
                (DefaultTreeModel) jTree1.getModel();
        DefaultTableModel modell =
                (DefaultTableModel) Jtable_producto.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode)modelo.getRoot();
        String com = "";
        Scanner sc = new Scanner(Jt_Comandos.getText());
        sc.useDelimiter(" ");
        while(sc.hasNext()){
            sc.next();
            com = sc.next();
        }
        for (int i = 0; i < modell.getRowCount(); i++) {
            if (modell.getValueAt(i, 0).toString().matches("^[0-9]$")){
            }
            else {
                JOptionPane.showMessageDialog(this, "Error al poner el dato de la ID "+"de la row"+i);
                cont =1;
                break;
            }
            if (modell.getValueAt(i, 2).toString().matches("^[0-9]$")){
            }
            else{
                JOptionPane.showMessageDialog(this, "Error al poner el dato de la categoria "+"de la row"+i);
                cont =1;
                break;
            }
            if (modell.getValueAt(i, 3).toString().matches("^[0-9]$")){
            }
            else{
                JOptionPane.showMessageDialog(this, "Error al poner el dato del precio "+"de la row"+i);
                cont = 1;
                break;
            }
            if (modell.getValueAt(i, 4).toString().matches("^[0-9]{3}$")){
            }
            else{
                JOptionPane.showMessageDialog(this, "Error al poner el dato de la aisle "+"de la row"+i);
                cont = 1;
                break;
            }
            if (modell.getValueAt(i, 5).toString().matches("^[0-9]{3}$")){
            }
            else{
                JOptionPane.showMessageDialog(this, "Error al poner el dato del bin "+"de la row"+i);
                cont = 1;
                break;
            }
        }
        
        if (cont == 0){
            File archivo = null;
            FileWriter fw = null;
            BufferedWriter bw = null;
            try {
                archivo = new File(com);
                fw = new FileWriter("./"+archivo,false);
                bw = new BufferedWriter (fw);
                for (int i = 0; i < modell.getRowCount(); i++) {
                    bw.write(modell.getValueAt(i, 0)+",");
                    bw.write(modell.getValueAt(i, 1)+",");
                    bw.write(modell.getValueAt(i, 2)+",");
                    bw.write(modell.getValueAt(i, 3)+",");
                    bw.write(modell.getValueAt(i, 4)+",");
                    bw.write(modell.getValueAt(i, 5)+",");
                    
                }
                bw.flush();
            } catch (Exception e) {
                e.printStackTrace();
            }
            bw.close();
            fw.close();
        }
        else{
            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Jt_Comandos;
    private javax.swing.JTable Jtable_producto;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
